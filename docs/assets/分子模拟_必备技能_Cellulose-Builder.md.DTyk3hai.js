import{_ as a,c as i,o as l,ag as s}from"./chunks/framework.Bw-5EFTY.js";const u=JSON.parse('{"title":"Cellulose-Builder","description":"","frontmatter":{},"headers":[],"relativePath":"分子模拟/必备技能/Cellulose-Builder.md","filePath":"分子模拟/必备技能/Cellulose-Builder.md","lastUpdated":null}'),t={name:"分子模拟/必备技能/Cellulose-Builder.md"};function n(r,e,p,o,h,d){return l(),i("div",null,e[0]||(e[0]=[s(`<h1 id="cellulose-builder" tabindex="-1">Cellulose-Builder <a class="header-anchor" href="#cellulose-builder" aria-label="Permalink to &quot;Cellulose-Builder&quot;">​</a></h1><blockquote><p>目标: 介绍一个生成纤维素晶体的脚本工具</p></blockquote><h2 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to &quot;简介&quot;">​</a></h2><ul><li>Cellulose-Builder 是一个 bash 脚本，可以在任何类 Unix 平台上运行，由坎皮纳斯州立大学(UNICAMP)斯卡夫化学研究所开发。该程序可以构建不同尺寸和几何形状的纤维素晶体结构，为指定纤维素结构的所有原子生成笛卡尔坐标，适合用作分子动力学模拟和其他计算中的起始结构。</li><li>从作者的发布网站下载需要梯子。(<a href="https://code.google.com/archive/p/cellulose-builder/downloads" target="_blank" rel="noreferrer">https://code.google.com/archive/p/cellulose-builder/downloads</a>)</li><li>这里提供下载好的版本作为参考和学习：<a href="https://pan.baidu.com/s/1L6uzSwMhFk2RGb41h9G_ew?pwd=ydem" target="_blank" rel="noreferrer">&gt;&gt;百度网盘&lt;&lt;</a></li></ul><h2 id="软件依赖" tabindex="-1">软件依赖 <a class="header-anchor" href="#软件依赖" aria-label="Permalink to &quot;软件依赖&quot;">​</a></h2><p>该程序的运行依赖于三个程序包：</p><ol><li>octave</li><li>VMD</li><li>psfgen</li></ol><p>下面以Debian系统为例，展示Cellulose-Builder的配置及使用。（如果你是Ubuntu，那么同样适用，如果你是Red Hat系，替换一些必要命令即可）。</p><p>首先移动到工作目录，下面的所有软件都安装在工作目录中，这里我的工作目录为账户主目录（/home/youraccountname）, <code>cd ~</code></p><h3 id="octave" tabindex="-1">octave <a class="header-anchor" href="#octave" aria-label="Permalink to &quot;octave&quot;">​</a></h3><p>octave 是一种编程语言，用于工程、科学计算，在这里用于建模过程中的数值计算。在Debian系统中可以使用以下命令安装：<code>sudo apt-get install octave</code></p><h3 id="vmd" tabindex="-1">VMD <a class="header-anchor" href="#vmd" aria-label="Permalink to &quot;VMD&quot;">​</a></h3><p><a href="https://www.ks.uiuc.edu/Research/vmd/" target="_blank" rel="noreferrer">VMD</a> 是一款专门用于可视化分子模拟的软件工具，在官网注册登录即可免费下载。选择Linux平台最新版本下载即可，例如：</p><p><em>【Version 1.9.4 LATEST ALPHA (2022-04-27) Platforms:LINUX_64 (RHEL 7+) OpenGL, CUDA, OptiX RTX, OSPRay (Linux (RHEL 7+) 64-bit Intel/AMD x86_64 SSE/AVX+ with CUDA 10, OptiX6.5 RTX, OSPRay)】</em></p><p>将安装包“vmd-1.9.4a57.bin.LINUXAMD64-CUDA102-OptiX650-OSPRay185.opengl.tar.gz”移动到工作目录解压安装：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tar</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -xzvf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vmd-1.9.4a57.bin.LINUXAMD64-CUDA102-OptiX650-OSPRay185.opengl.tar.gz</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vmd-1.9.4a57</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./configure</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> LINUXAMD64</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./configure</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div><h3 id="psfgen" tabindex="-1">psfgen <a class="header-anchor" href="#psfgen" aria-label="Permalink to &quot;psfgen&quot;">​</a></h3><p>psfgen 是一种在分子模拟和建模中广泛使用的工具，特别是在处理蛋白质和其他生物大分子的结构文件时。它主要用于生成和修改分子动力学模拟所需的文件，特别是PSF（Protein Structure Files，蛋白质结构文件）和PDB（Protein Data Bank，蛋白质数据库文件）文件。由于<a href="https://www.ks.uiuc.edu/Research/namd/" target="_blank" rel="noreferrer">NVMD</a>中包含了该程序，因此安装NVMD即可。选择Linux平台cuda版本，例如：</p><p><em>【Version 3.0 (2024-06-14) Platforms:Linux-x86_64-multicore-CUDA (NVIDIA CUDA acceleration)】</em></p><p>请使用CUDA版本的NAMD中的psfgen，否则运行时可能无法生成.psf和.pdb文件。将安装包“NAMD_3.0_Linux-x86_64-multicore-CUDA.tar.gz”移动到工作目录解压即可：<code>tar -xzvf NAMD_3.0_Linux-x86_64-multicore-CUDA.tar.gz</code></p><h2 id="解压安装" tabindex="-1">解压安装 <a class="header-anchor" href="#解压安装" aria-label="Permalink to &quot;解压安装&quot;">​</a></h2><p>将提供的“cellulose-builder_July_2013.zip”复制到工作目录，解压缩即可：<code>unzip cellulose-builder_July_2013.zip</code></p><p>最后，还需要将所有依赖软件的可执行文件放在PATH中，以便程序调用。主要是将psfgen添加到PATH变量中.</p><p>编辑文件.profile文件: <code>vim ~/.profile</code></p><p>在文件末尾添加一行文本: <code>export PATH=&quot;$PATH:/home/zz/NAMD_3.0b6_Linux-x86_64-multicore-CUDA/&quot;</code></p><p>刷新shell环境: <code>source ~/.profile</code></p><p>检查是否可以运行:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cellulose-builder_July_2013</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./cellulose-builder.sh</span></span></code></pre></div><p>对于VMD和NVMD的下载注意：</p><ol><li>如果你的Linux安装了可是化桌面，直接使用浏览器下载安装包即可。</li><li>如果你使用的是Windows平台的WSL，使用Windows的浏览器下载即可。</li><li>如果你是纯命令行的Linux，首先在另一台可登录网页的设备上注册登录下载，然后在下载界面右键复制获取下载链接url，再使用wget命令即可在命令行中下载：<code>wget \\&lt;url\\&gt;</code></li></ol><h2 id="命令使用" tabindex="-1">命令使用 <a class="header-anchor" href="#命令使用" aria-label="Permalink to &quot;命令使用&quot;">​</a></h2><p>cellulose-builder 接受以下三种指令输入：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./cellulose-builder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [integer] [integer] [integer]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./cellulose-builder</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> fibril</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [integer]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./cellulose-builder</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">center</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">monolayer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [integer] [integer]</span></span></code></pre></div><p>第一个生成平行六面体纤维素晶体：用户必须提供三个整数，分别代表每个晶轴上的晶胞复制重复的数量（及链的层数、每层链数、每条链的纤维二糖数）。前两个整数必须大于1，而最后一个整数必须大于0。例如下面的指令将会生成一个(2*2-1)=3层纤维素平面，每个纤维素平面由4（或3）条纤维素单链构成，每个纤维素单链包含3个纤维二糖的平行六面体晶体： <code>./cellulose-builder.sh 2 4 3</code></p><p>第二个形成36链纤维素原纤维：必须提供字符串fibril作为第一个参数，同时提供一个大于0的整数作为第二个参数，代表每个纤维素链中纤维二糖的数量。</p><p>第三个生成单层的纤维素平面：必须输入origin或center或monolayer作为第一个参数，然后输入两个大于1的整数，分别代表单层中包含的纤维素链的数量和每条链中纤维二糖的数量。其中origin的纤维二糖为I-beta构象，center为II-beta构象，monolayer为I-alpha构象。</p><h2 id="输出" tabindex="-1">输出 <a class="header-anchor" href="#输出" aria-label="Permalink to &quot;输出&quot;">​</a></h2><p>输出：成功运行命令会得到一个名为crystal的文件夹，里面包含：crystal.pdb, crystal.psf, crystal.xyz, psfgen.sh, psfgen.log；其中.pdb, .psf, .xyz是相应的结构文件，另外两个是程序运行过程中生成的。</p><h2 id="自定义" tabindex="-1">自定义 <a class="header-anchor" href="#自定义" aria-label="Permalink to &quot;自定义&quot;">​</a></h2><p>其它自定义：cellulose-builder还支持构建多种类型的结晶纤维素，可以通过编辑输入文件input.inp来控制。input.inp内容如下：</p><div class="language-input.inp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">input.inp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>PHASE=I-BETA   # Accepted values are: I-ALPHA , I-BETA , II , III_I .</span></span>
<span class="line"><span>PBC=NONE       # Accepted values are: NONE (default), A , B , ALL .</span></span>
<span class="line"><span>PCB_c=TRUE    # Accepted values are: FALSE , TRUE .</span></span></code></pre></div><ol><li>PHASE 为可选的纤维素构象。</li><li>PBC 控制平移对称性：即是否沿晶体学方向a、b构建具有平移对称性的微晶，使其暴露不同的晶面。</li><li>PCB_c为纤维素链周期性共价键设置：PCB_c=TRUE 表示启用周期性，此选项将阻止在链末端添加 H 和 OH 原子，使纤维素链末端能够与相邻的周期图像形成糖苷键。PCB_c=FALSE 表示纤维素链不会周期性地与相邻图像共价键合，每条纤维素链都带有一个额外的水分子（一个 H 原子在一个末端，一个 OH 基团在另一个末端）。</li></ol><h2 id="拓展阅读" tabindex="-1">拓展阅读 <a class="header-anchor" href="#拓展阅读" aria-label="Permalink to &quot;拓展阅读&quot;">​</a></h2><ul><li>更多的使用展示、配置、及文件含义可以从论文中获得，DOI:10.1002/jcc.22959</li><li>论文链接：<a href="https://onlinelibrary.wiley.com/doi/abs/10.1002/jcc.22959" target="_blank" rel="noreferrer">https://onlinelibrary.wiley.com/doi/abs/10.1002/jcc.22959</a></li><li>参考链接：<a href="https://blog.csdn.net/CocoCream/article/details/130149772?spm=1001.2014.3001.5501" target="_blank" rel="noreferrer">Cellulose Builder 用户指南-CSDN博客</a></li></ul>`,44)]))}const k=a(t,[["render",n]]);export{u as __pageData,k as default};
